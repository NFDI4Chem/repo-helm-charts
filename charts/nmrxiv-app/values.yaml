# Default values for nmrxiv-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Default app properties for laravel.
appProperties:
  name: nmrXiv
  key:  
  env: development
  debug: true
  url: https://<your-url>
  queueConnection: sync
  schemaVersion: 1.0
  coolOffPeriod: 30

webservices:
  europemcApi: https://www.ebi.ac.uk/europepmc/webservices/rest/search
  orcidIdSearchApi: https://pub.orcid.org/v2.1/search
  orcidIdEmploymentApi: https://pub.orcid.org/v3.0/{orcid_id}/employments
  orcidIdPersonApi: https://pub.orcid.org/v3.0/{orcid_id}/person
  cmApi: https://api.naturalproducts.net/latest/
  crossrefApi: https://api.crossref.org/works/
  dataciteApi: https://api.datacite.org/

logProperties:
  logChannel: stack
  logLevel: debug


#Enable this properties for Single Sign-On follow the documentation for more info https://docs.nmrxiv.org/docs/developer-guides/configurations/oauth
oauthProperties:
  twitter:
    enabled: false
    clientID:
    clientSecret:
    redirectURL: 
  github:
    enabled: false
    clientID:
    clientSecret:
    redirectURL:
  orcid:
    enabled: false
    clientID:
    clientSecret:
    redirectURL:
    environment:

appImage:
  name: php
  repository: nfdi4chem/nmrxiv
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: app-dev-latest

# nginxImage:
#   name: nginx
#   repository: nfdi4chem/nmrxiv
#   pullPolicy: Always
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: latest

EnvConfigMapRef:
  name: "nmrxiv-config-map"
  enabled: true
EnvSecretRef:
  name: "nmrxiv-secrets"
  enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {
  fsGroup: 82
}

securityContext: {
  runAsUser: 82,
  readOnlyRootFilesystem: true
}


service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    # Essential for Laravel CSRF protection behind ingress
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Forwarded-Proto: https";
      more_set_headers "X-Forwarded-Port: 443";
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  app:
    limits:
      cpu: 400m
      memory: 250Mi
    requests:
      cpu: 250m
      memory: 125Mi
  nginx:
    limits:
      cpu: 400m
      memory: 250Mi
    requests:
      cpu: 250m
      memory: 125Mi

# Uncomment below properties and replace it with your own smtp values to activate the mail server.
mail:
  enabled: false
  # host: 'smtp.uni-jena.de'
  # port: 587
  # from: info.nmrxiv@uni-jena.de
  # fromName: "nmrXiv-dev"
  # user: user
  # password: secret
  # mailer: smtp
  # encryption: tls

# DB properties
# postgresql:
#   enabled: true
#   # global:
#   #   storageClass: standard
#   connection: pgsql
#   primary:
#     persistence:
#       enabled: false
#       existingClaim: ''
#       size: 1Gi
#   # host: nmrxiv-postgresql
#   # port: 5432
#   auth:
#     username: pguser
#     password: secret
#     database: nmrxiv
#     postgresPassword: secret
#   resources:
#     limits:
#       cpu: 200m
#       memory: 150Mi
#     requests:
#       cpu: 20m
#       memory: 100Mi

#DB Properties
rdkitcatridgepostgres:
  enabled: true
  version: "15.4"
  auth:
    pgPassword: secret
    db: test
    user: test
    postgresPassword: secret
  connection: pgsql
  port: 5432
  primary:
    persistence:
      size: 5Gi

fileStorage:
# Below values are for file storage configuration.
# You can have desired S3 compatible driver of your choice. Follow to read more https://laravel.com/docs/9.x/filesystem
  enabled: false
  fileSystemDriver: 
  fileSystemDriverPublic: 
  awsAccessKeyID: 
  awsSecretAccessKey: 
  awsDefaultRegion: 
  awsBucket: 
  awsEndpoint:
  awsURL: 
  awsBucketPublic: 

nmrium:
# You can use the nmrium hosted at our server or you can host one of your own and replace below values.
  enabled: false
  image:
    name: nmrium
    repository: nfdi4chem/nmrium-react-wrapper:latest
    pullPolicy: Always
    enabled: false
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  service:
    type: LoadBalancer
    port: 80
  nmriumURL: https://nmrium.nmrxiv.org/?defaultEmptyMessage=loading&workspace=nmrxiv

redis:
  auth:
    enabled: true
    password: password
  enabled: false
  global:
    storageClass: standard
  #host: nmrxiv-redis-master
  master:
    persistence:
      enabled: true
      size: 1Gi
  replica:
    persistence:
      enabled: true
      size: 1Gi
  replica:
    replicaCount: 1
  port: 6379
  sessionDriver: redis
  cacheDriver: redis
  redisClient: predis
  sessionLifetime: 120
  memcachedHost: memcached

# Session configuration for Laravel when Redis is disabled
sessionDriver: database
sessionLifetime: 120

# Session security settings (critical for HTTPS deployments)
session:
  secureCookie: true
  sameSite: lax
  cookieName: nmrxiv_session

# Trusted proxies configuration (required for proper CSRF handling behind ingress/load balancer)
trustedProxies: "*"

# Sanctum configuration for API authentication
sanctum:
  statefulDomains: ""  # Will default to APP_URL if not set

# Force HTTPS URLs (important for Kubernetes deployments with HTTPS ingress)
forceHttps: true

rabbitmq: 
  enabled: false
  queueConnection: sync
  port: 5672
  #host: nmrxiv-rabbitmq
  auth: 
    username: 'rabbitmq_user'
    password: 'password'
    #erlangCookie: 'erlangCookieerlangCookie'
  global:
    storageClass: 'standard'
  metrics:
    enabled: false
  ingress:
    enabled: false
    path: '/'
    hostname: ''

meilisearch: 
  enabled: false
  #Replace the host name with yours.
  host: 'https://msdev.nmrxiv.org'
  # key used to generate search key and public key
  masterKey: secret
  # run below command to generate search key and public key 
  # curl -H "Authorization: Bearer [masterKey]" -X GET 'https://msdev.nmrxiv.org/keys'
  searchKey:
  publicKey:
  scoutPrefix: dev_
  scout: meilisearch
  # environment: 
  #   MEILI_ENV: development
  auth:
    existingMasterKeySecret: 'meilisearch-master-key'
  persistence:
    enabled: true
    size: 5Gi
    storageClassName: ""


keycloak:
  enabled: false
  auth:
    adminUser: nmrxiv_keycloak
    adminPassword: secret
  postgresql:
    enabled: true 
    auth:
      username: keycloak_nmrxiv
      password: secret
  service:
    type: LoadBalancer

storage:
  pvc:
    accessModes:
      - ReadWriteOnce
    annotations: {}
    enabled: true
    existingClaim: ''
    storage: 2Gi
    # storageClassName: standard

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

worker:
  enabled: true
  replicaCount: 1
  autoscale:
    enabled: false
    minReplicas: 2
    maxReplicas: 6
    CPULimit: 70
    MemoryLimit: 1568Mi
  cmd: "php artisan horizon"
  resources:
    limits:
      cpu: 300m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 150Mi

scheduler:
  enabled: false
  replicaCount: 1
  autoscale:
    enabled: false
    minReplicas: 2
    maxReplicas: 6
    MemoryLimit: 1568Mi
  cmd: "php artisan schedule:work"
  resources:
    requests:
      cpu: 100m
      memory: 125Mi
    limits:
      cpu: 200m
      memory: 500Mi

larabug:
  enabled: false
  lbKey: 
  lbProjectKey:

datacite:
  host: 
  username: 
  secret: 
  prefix: 
  endpoint: https://api.test.datacite.org

nmrkit:
  enabled: true
  image:
    name: nmrkit
    repository: nfdi4chem/nmrkit
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev-latest
  service:
    type: LoadBalancer
    port: 80
  rdkitcatridgepostgres:
    enabled: false
  postgres:
    auth:
      user: nmrxiv
      db: nmrxiv
      pgPassword: secret
    server: nmrxiv-postgresql
    port: 5432

auth:
  disabled: false

proxy:
  httpProxy: "http://internet4nzm.rz.uni-jena.de:3128"
  httpsProxy: "http://internet4nzm.rz.uni-jena.de:3128"
  noProxy: "localhost,127.0.0.1,meilisearch"

horizon:
  prefix: "nmrxiv_horizon"
  balance: "auto"

octane:
  server: "frankenphp"
  #supervisorCommand: "/usr/local/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=frankenphp --host=0.0.0.0 --port=80 --watch"
  supervisorCommand: "/usr/local/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=frankenphp --host=0.0.0.0 --admin-port=2019 --port=80"

pusher:
  enabled: false
  appId: ""
  appKey: "dummy"
  appSecret: ""
  appCluster: "mt1"

nodeSelector: {}

tolerations: []

affinity: {}